<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[源码]]></title>
    <url>%2F2019%2F08%2F17%2FSource_Code%2F</url>
    <content type="text"><![CDATA[java.langObject protected方法2个，分别是finalize()、clone(); native修饰的方法6个，分别是hashCode()、notify()、notifyAll()、wait(long timeout)、clone()、getClass(); final方法4个,而且都是native方法，分别是notify()、notifyAll()、wait(long timeout)、getClass(); Object的6个native方法中只有hashCode()、clone()不被final修饰 123456789101112131415161718192021public String toString()&#123; return getClass().getName() + "@" + Integer.toHexString(hashCode());&#125;public boolean equals()&#123; return (this == obj);&#125;public native int hashCode();protected void finalize() throws Throwable &#123; &#125;public final native void notify();public final native void notifyAll();public final native void wait(long timeout) throws InterruptedException;protected native Object clone();public final native Class&lt;?&gt; getClass(); ThreadLocalThreadLocalMap是Thread的属性，set的时候也是以Thread为key，为什么要用Entry[]数组存储 replaceStaleEntry方法，为什么需要向前向后搜索相同的key？12345678910111213141516public void set(T value) &#123; Thread t = Thread.currentThread(); ThreadLocalMap map = getMap(t); if (map != null) map.set(this, value); else createMap(t, value);&#125;ThreadLocalMap getMap(Thread t) &#123; return t.threadLocals;&#125;/* ThreadLocal values pertaining to this thread. This map is maintained * by the ThreadLocal class. */ThreadLocal.ThreadLocalMap threadLocals = null; java.utilCollectionQueue:insert: add() offer() delete: remove() poll() exist: element() peek()123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122&#123; "SYS_HEAD": &#123; "serviceCode": "服务代码", "serviceScenario": "服务场景", "serviceVersion": "服务版本", "serviceRequestSystemNumber": "服务请求系统编号", "serviceRequestSystemModuleNumber": "服务请求系统子模块编号", "serviceRequestSystemSerialNumber": "服务请求系统流水号", "serviceRequestSystemTransactionDate": "服务请求系统交易日期", "serviceRequestSystemTransactionTime": "服务请求系统交易时间", "serviceRequestSystemTerminalNumber": "服务请求系统终端号", "serviceRequestSystemChannelType": "服务请求系统渠道类型", "sourceServiceRequestSystemNumber": "源服务请求系统编号", "sourceServiceRequestSystemSubmoduleNumber": "源服务请求系统子模块编号", "sourceServiceRequestSystemSerialNumber": "源服务请求系统流水号", "sourceServiceRequestSystemTransactionDate": "源服务请求系统交易日期", "sourceServiceRequestSystemTransactionTime": "源服务请求系统交易时间", "transactionModel": "交易模式", "userLanguage": "用户语言", "macCheckNodeNumber": "Mac校验的节点号", "macNumber": "Mac值" &#125;, "APP_HEAD": &#123; "agent": "经办人", "organizationCode": "组织机构代码", "agentLevel": "经办人级别", "agentCategory": "经办人类别", "reviewMark": "复核标志", "reviewerArray": [ &#123; "transactionReviewerNumber": "交易复核员号", "transactionReviewOrganizationCode": "交易复核机构代码", "transactionReviewerLevel": "交易复核员级别", "transactionReviewerCategory": "交易复核员类别" &#125; ], "approvalMark": "审批标志", "approverInformationArray": [ &#123; "approverNumber": "审批员号", "approvalOrganizationCode": "审批机构代码", "approverPassword": "审批员密码", "approverLevel": "审批员级别", "approverCategory": "审批员类别" &#125; ], "channelCode": "渠道号", "channelType": "渠道类型", "productCode": "产品代码", "productType": "产品类型", "clientNumber": "客户号", "transactionRelatedClientName": "交易关联客户名称", "clientType": "客户类型", "clientGrade": "客户等级" &#125;, "LOCAL_HEAD": &#123;&#125;, "BODY": &#123;&#125;&#125;&#123; "SYS_HEAD": &#123; "serviceCode": "服务代码", "serviceScenario": "服务场景", "serviceVersion": "服务版本", "serviceRequestSystemNumber": "服务请求系统编号", "serviceRequestSystemModuleNumber": "服务请求系统子模块编号", "serviceRequestSystemSerialNumber": "服务请求系统流水号", "serviceRequestSystemChannelType": "服务请求系统渠道类型", "serviceRequestSystemTerminalNumber": "服务请求系统终端号", "sourceServiceRequestSystemNumber": "源服务请求系统编号", "sourceServiceRequestSystemSubmoduleNumber": "源服务请求系统子模块编号", "sourceServiceRequestSystemSerialNumber": "源服务请求系统流水号", "serviceProvisionSystemNumber": "服务提供方系统编号", "serviceProvisionSystemSerialNumber": "服务提供系统流水号", "serviceProvisionSystemTransactionDate": "服务提供系统交易日期", "serviceProvisionSystemTransactionTime": "服务提供系统交易时间", "systemProcessingResult": "系统处理结果", "userLanguage": "用户语言", "macCheckNodeNumber": "Mac校验的节点号", "macNumber": "Mac值", "transactionReturnCodeArray": [ &#123; "transactionReturnCode": "交易返回代码", "transactionReturnInformation": "交易返回信息" &#125; ] &#125;, "APP_HEAD": &#123; "agent": "经办人", "organizationCode": "组织机构代码", "agentLevel": "经办人级别", "agentCategory": "经办人类别", "reviewMark": "复核标志", "reviewerArray": [ &#123; "transactionReviewerNumber": "交易复核员号", "transactionReviewOrganizationCode": "交易复核机构代码", "transactionReviewerLevel": "交易复核员级别", "transactionReviewerCategory": "交易复核员类别" &#125; ], "approvalMark": "审批标志", "approverInformationArray": [ &#123; "approverNumber": "审批员号", "approvalOrganizationCode": "审批机构代码", "approverLevel": "审批员级别", "approverCategory": "审批员类别" &#125; ], "channelCode": "渠道号", "channelType": "渠道类型", "productCode": "产品代码", "productType": "产品类型", "clientNumber": "客户号", "transactionRelatedClientName": "交易关联客户名称", "clientType": "客户类型", "clientGrade": "客户等级" &#125;, "LOCAL_HEAD": &#123;&#125;, "BODY": &#123;&#125;&#125;]]></content>
      <tags>
        <tag>java</tag>
        <tag>source code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习计划]]></title>
    <url>%2F2019%2F08%2F17%2Fplan%2F</url>
    <content type="text"><![CDATA[JVMSource Codeaaa JavabasecollectionThread PoolsynchronizedI/OTCP/IP握手协议HTTPSMySQLLinuxVIMNginxSpringSpringSpringMVCSpringBootSpringCloudDesign PatternsMybatisDesign PatternsRedisLuaDistributed分布式锁分布式事务MQopen系统架构系统设计DockerDubbo算法排序查找二叉树链表]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[标签测试文章]]></title>
    <url>%2F2017%2F08%2F16%2Ftest-my-site%2F</url>
    <content type="text"></content>
      <categories>
        <category>分类1</category>
      </categories>
      <tags>
        <tag>tag1</tag>
        <tag>tag2</tag>
      </tags>
  </entry>
</search>
